{
    "languageserver": {
        "clangd": {
            "command": "clangd",
            "args": ["--background-index"],
            "rootPatterns": ["compile_flags.txt", "compile_commands.json", ".vim/", ".git/", ".hg/"],
            "filetypes": ["c", "cpp", "objc", "objcpp"]
        },
        "golang": {
            "command": "gopls",
            "rootPatterns": ["go.mod", ".git/", ".hg/"],
            "filetypes": ["go"]
        },
        "rust": {
            "command": "ra_lsp_server",
            "filetypes": ["rust"],
            "rootPatterns": ["Cargo.toml"]
        },
        "haskell": {
            "command": "hie-wrapper",
            "rootPatterns": [ ".stack.yaml", "cabal.config", "package.yaml" ],
            "filetypes": [ "hs", "lhs", "haskell" ],
            "initializationOptions": {
                "languageServerHaskell": {
                    "hlintOn": true
                }
            },
        },
        "julia": {
            "command": "julia",
            "args" : ["--startup-file=no", "--history-file=no", "-e",
                "using LanguageServer;\nusing Pkg;\nimport StaticLint;\nimport SymbolServer;\nenv_path = dirname(Pkg.Types.Context().env.project_file);\ndebug = false;\nserver = LanguageServer.LanguageServerInstance(stdin, stdout, debug, env_path, \"\", Dict());\nserver.runlinter = true;\n run(server);"
            ],
            "filetypes": ["julia"]
        },
        "efm": {
            "command": "efm-langserver",
            "args": [],
            "trace.server": "verbose",
            //"args": ["-c", "$HOME/.vim/vim/efm_config.yaml"], //TODO bug exist
            "filetypes": ["vim", "eruby", "markdown", "yaml"]
        }
    }
}
